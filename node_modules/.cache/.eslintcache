[{"D:\\devtask\\client\\devtask\\src\\index.js":"1","D:\\devtask\\client\\devtask\\src\\reportWebVitals.js":"2","D:\\devtask\\client\\devtask\\src\\store\\reducers\\index.ts":"3","D:\\devtask\\client\\devtask\\src\\store\\reducers\\transition.ts":"4","D:\\devtask\\client\\devtask\\src\\store\\reducers\\status.ts":"5","D:\\devtask\\client\\devtask\\src\\models\\status.ts":"6","D:\\devtask\\client\\devtask\\src\\models\\transition.ts":"7","D:\\devtask\\client\\devtask\\src\\components\\App.tsx":"8","D:\\devtask\\client\\devtask\\src\\components\\StatusList.tsx":"9","D:\\devtask\\client\\devtask\\src\\components\\Status.tsx":"10","D:\\devtask\\client\\devtask\\src\\store\\actions\\index.ts":"11","D:\\devtask\\client\\devtask\\src\\store\\actions\\status.ts":"12","D:\\devtask\\client\\devtask\\src\\store\\actions\\transition.ts":"13","D:\\devtask\\client\\devtask\\src\\components\\TransitionList.tsx":"14","D:\\devtask\\client\\devtask\\src\\components\\Transition.tsx":"15","D:\\devtask\\client\\devtask\\src\\components\\Home.tsx":"16","D:\\devtask\\client\\devtask\\src\\components\\Redbutton.tsx":"17"},{"size":1043,"mtime":1637755859032,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":84,"mtime":1637760906746,"results":"21","hashOfConfig":"19"},{"size":1718,"mtime":1637858059749,"results":"22","hashOfConfig":"19"},{"size":1053,"mtime":1637850369036,"results":"23","hashOfConfig":"19"},{"size":576,"mtime":1637706137018,"results":"24","hashOfConfig":"19"},{"size":146,"mtime":1637783779553,"results":"25","hashOfConfig":"19"},{"size":209,"mtime":1637779351312,"results":"26","hashOfConfig":"19"},{"size":6748,"mtime":1637882835113,"results":"27","hashOfConfig":"19"},{"size":533,"mtime":1637881986672,"results":"28","hashOfConfig":"19"},{"size":182,"mtime":1637854148884,"results":"29","hashOfConfig":"19"},{"size":2572,"mtime":1637859841713,"results":"30","hashOfConfig":"19"},{"size":2404,"mtime":1637861285893,"results":"31","hashOfConfig":"19"},{"size":2233,"mtime":1637887258986,"results":"32","hashOfConfig":"19"},{"size":335,"mtime":1637882081721,"results":"33","hashOfConfig":"19"},{"size":542,"mtime":1639574819250,"results":"34","hashOfConfig":"19"},{"size":1112,"mtime":1637854625312,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1t2f0ji",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},"D:\\devtask\\client\\devtask\\src\\index.js",[],["77","78"],"D:\\devtask\\client\\devtask\\src\\reportWebVitals.js",[],"D:\\devtask\\client\\devtask\\src\\store\\reducers\\index.ts",[],["79","80"],"D:\\devtask\\client\\devtask\\src\\store\\reducers\\transition.ts",["81","82"],"import { transition } from \"../../models/transition\"\r\nimport {status}from '../../models/status'\r\nimport { connect } from \"react-redux\"\r\nimport { useState } from \"react\";\r\n//const [statusList, setstatusList] = useState<status[]>([]);\r\n//should connect to status reducer\r\n// const f=(props:any)=>{\r\n//      let d:status[]=props.stasusList;setstatusList(d)\r\n// return(null)\r\n\r\n// }\r\n\r\n const initilize={\r\n    transitions:[new transition(\"b\",new status(\"start\"),new status(\"cancle\"))]\r\n// statusList?statusList:\r\n}\r\n export const transitionReducer=(state=initilize,action: { type: any; payloud: any })=>{\r\n    switch(action.type){\r\n     case \"TRANSITIONADD\":\r\n         //if from and to exists in songlist\r\n   //    let from=   statusList.map(s=>{return s.name===action.payloud.from.name?s:null});\r\n   //    let to =statusList.map(s=>{return s.name===action.payloud.to.name?s:null});\r\n   //    let obj={...state}\r\n   // to?from?(  obj={...state,transitions:[...state.transitions,action.payloud]}):null:null\r\n   // return obj\r\n   return {...state,transitions:[...state.transitions,action.payloud]}\r\n    case \"TRANSITIONDELETE\":\r\n    //    let s1= state.songs.filter(s=>{s===action.payloud})\r\n    //    state.songs.map((s,i=>{s===s1?state.songs.splice(i,1):null}))\r\n    let list= state.transitions.filter(t=>{return t.name!==action.payloud})\r\n        return{...state,transitions:list}\r\n        case \"TRANSITIONFILL\":\r\n         return{...state,transitions:action.payloud}\r\n        case \"DELETEALL\":\r\n         return {...state,transitions:[]}\r\n}\r\nreturn state;\r\n}\r\n// function myMapStateToProps( state: any) {\r\n//   return{  statusList:state.statusPart.statuses}\r\n// }\r\n\r\n//export default connect(myMapStateToProps,{})(f); \r\n\r\n","D:\\devtask\\client\\devtask\\src\\store\\reducers\\status.ts",[],"D:\\devtask\\client\\devtask\\src\\models\\status.ts",[],"D:\\devtask\\client\\devtask\\src\\models\\transition.ts",[],"D:\\devtask\\client\\devtask\\src\\components\\App.tsx",["83","84"],"\nimport './App.css';\nimport Home from './Home';\nimport StatusList from './StatusList';\nimport TransitionList from './TransitionList';\n\nfunction App() {\n  return (\n<>   \n<Home/>\n</>\n  );\n}\n\nexport default App;\n","D:\\devtask\\client\\devtask\\src\\components\\StatusList.tsx",["85","86","87","88","89","90","91","92","93","94","95","96"],"import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { connect, } from 'react-redux';\r\nimport { status } from \"../models/status\";\r\n\r\nimport { deleteStatus,initStatus,addStatus, deleteTransition, getStatuses } from \"../store/actions\";\r\nimport { statusReducer } from \"../store/reducers\";\r\nimport Status from './Status';\r\nimport { useState } from \"react\";\r\nimport { transition } from \"../models/transition\";\r\nimport { hrtime } from \"process\";\r\nimport { queryHelpers } from \"@testing-library/dom\";\r\n\r\n\r\nconst StatusList  = (props: any) => {\r\n  useEffect(() => {\r\n  props.getStatuses();\r\n},[]);\r\n\r\n  console.log(props.initS)\r\nconst add=(name:string)=>{\r\n  if (name!=''){\r\nlet  newstatus:status=new status(name);\r\nprops.addStatus(newstatus);\r\n}\r\n}\r\nconst deleteStatus=(status:status)=>{\r\n  props.deleteStatus(status);\r\n  props.transitionList.map((item:transition)=>{return (item.from.name===status.name||item.to.name===status.name)?props.deleteTransition(item.name):null})\r\n}\r\nconst init=(s:status)=>{\r\n  props.initStatus(s);\r\n} \r\n\r\n\r\nconst [all, setAll] = useState<status[]>();\r\nconst [fromarr, setFromarr] = useState<status[]>();\r\nconst [toarr, setToarr] = useState<status[]>();\r\nconst [ini, setIni] = useState<number>();\r\n\r\n\r\nconst isfinal=(item:status)=>{console.log(\"toarr\",toarr,item);\r\nlet i= (toarr&&toarr.map(v=>{return v.name==item.name}));console.log(\"i\",i);\r\n if(i?.includes(true))return false; \r\n\r\n  else return true;\r\n}\r\nconst helpisorphon=()=>{\r\n  setFromarr(props.transitionList.map((f: transition,i:number )=>{return f.from}));\r\n  setToarr(props.transitionList.map((t: transition,i:number )=>{return t.to}));\r\n  console.log(fromarr,toarr,\"arraies\")\r\n}\r\nconst isorphon=(item:status)=>{\r\n  if (fromarr==null||toarr==null)return true\r\n  let index=fromarr&&fromarr.map((f:status,i)=>{return(f.name==props.initS.name)?i:null});\r\nindex&&index.map(i=>i&&setIni(i));\r\nlet i=fromarr?.length+toarr?.length;\r\nif (index==null)return true;\r\nwhile(ini&&i>0){i--;\r\nif(toarr[ini]&&toarr[ini].name===item.name)return false;\r\nelse  {index=fromarr&&fromarr.map((f:status,i)=>{return toarr[ini]&&(f.name==toarr[ini].name)?i:null});\r\nindex&&index.map(i=>i&&setIni(i));}\r\nif (index==null)return true;\r\n}\r\n\r\nreturn false;\r\n}\r\nuseEffect(() => {helpisorphon();\r\n  \r\n}, [props.initS,props.transitionList]);\r\n  const [txt2, setTxt2] = useState<HTMLInputElement|null>();\r\n\r\n    return  ( <>\r\n    <h3>Add status</h3>\r\n    <input type=\"test\" \tref={(element) => {  setTxt2 (element) ; }}></input><button onClick={()=>{add(txt2?txt2.value:'')}}>add</button>\r\n { \r\n\r\nprops.statusesList.map((item: any, i: any)=>{ \r\n          return <Status key={i} status={item} delete={deleteStatus}toarr={toarr} initStatus={props.initS} init={init} isfinal={isfinal} isorphon={isorphon}/>;\r\n\r\n        })   \r\n      \r\n}       \r\n        </> ) \r\n\r\n}  \r\n\r\n \r\nconst myMapStateToProps =(state:any) =>{\r\n    return{\r\n  transitionList:state.transitionPart.transitions,\r\n  initS:state.statusPart.init1,\r\n  statusesList:state.statusPart.statuses\r\n\r\n}\r\n}\r\n\r\nexport default connect(myMapStateToProps,{deleteStatus,initStatus,addStatus,deleteTransition,getStatuses})(StatusList); \r\n\r\n\r\n// import React, { FunctionComponent, useEffect } from \"react\";\r\n// import { connect, } from 'react-redux';\r\n// import { status } from \"../models/status\";\r\n\r\n// import { deleteStatus,initStatus,addStatus, deleteTransition, getStatuses } from \"../store/actions\";\r\n// import { statusReducer } from \"../store/reducers\";\r\n// import Status from './Status';\r\n// import { useState } from \"react\";\r\n// import { transition } from \"../models/transition\";\r\n// import { hrtime } from \"process\";\r\n// import { queryHelpers } from \"@testing-library/dom\";\r\n\r\n// // interface StatusList Props {\r\n//  let inputi = React.createRef();\r\n// // },currentstatus:status\r\n\r\n// const StatusList  = (props: any) => {\r\n//   useEffect(() => {\r\n//   props.getStatuses();\r\n// },[]);\r\n// const recorphan=(arr:transition[],i:number,init:any,notorphan:any[])=>{\r\n//   if(init===null||i==arr.length){return;}\r\n// let h= arr.map((x:transition)=>{return x.from.name===init.name?x.to:null});\r\n// i++;notorphan.push(h);recorphan(arr,i,h,notorphan);\r\n// return notorphan; \r\n// }\r\n// const [notor, setNotor] = useState<any[] | undefined>();\r\n// // const help=(h:any)=>{\r\n// // notor?setNotor([...notor,h]):setNotor([h]);\r\n// // console.log(\"notor\",notor);\r\n// // }\r\n// let arr:(status|null)[]=[];\r\n// const recorphan1=(arr:transition[],i:number,init:any)=>{\r\n//   if(init===null||i==arr.length){return;}\r\n// let h= arr.map((x:transition)=>{return x.from.name===init.name?x.to:null});\r\n// i++;recorphan1(arr,i,h);\r\n// setNotor(h);console.log(\"h\",h);console.log(\"notor\",notor)\r\n// return h; \r\n// }\r\n//   console.log(props.initS)\r\n// const add=(name:string)=>{\r\n//   if (name!=''){\r\n// let  newstatus:status=new status(name);\r\n// props.addStatus(newstatus);\r\n// }\r\n// }\r\n// const deleteStatus=(status:status)=>{\r\n//   props.deleteStatus(status);\r\n//   props.transitionList.map((item:transition)=>{return (item.from.name===status.name||item.to.name===status.name)?props.deleteTransition(item.name):null})\r\n// }\r\n// const init=(s:status)=>{\r\n//   props.initStatus(s);\r\n// }\r\n// useEffect(() => {\r\n//   // setA(recorphan1(props.transitionList,0,props.initS));\r\n//   // console.log(\"noto\",a);\r\n//   recorphan1(props.transitionList,1,props.initS);\r\n// }, [props.initS,props.transitionList]);\r\n// const iso=(item:any)=>{return a?a.map(x=>{return isorph&&x?( x.name===item.name?setIsorph(false):null):null}):null}\r\n//   const [txt2, setTxt2] = useState<HTMLInputElement|null>();\r\n//   const [a, setA] = useState<any[] | undefined>([]);\r\n//   const [isorph, setIsorph] = useState(true);\r\n//     return  ( <>\r\n//     <h1>Add status</h1>\r\n//     <input type=\"test\" \tref={(element) => {  setTxt2 (element) ; }}></input><button onClick={()=>{add(txt2?txt2.value:'')}}>add</button>\r\n//   {/* {setA(recorphan(props.transitionList,0,props.initS,[]))}      */}\r\n// { }\r\n//  {/* { props.statusesList.map((item: any, i: any)=>{\r\n//    return a?a.map(x=>{return isorph&&x?(x.name===item.name?setIsorph(false):null):null}):null})}\r\n// */}\r\n//  { \r\n\r\n// props.statusesList.map((item: any, i: any)=>{\r\n//           return <Status key={i} status={item} delete={deleteStatus} initStatus={props.initS} init={init} isorphf={iso} isorph={isorph}/>;\r\n\r\n//         })   \r\n      \r\n// }       \r\n//         </> ) \r\n\r\n// }  \r\n\r\n \r\n// const myMapStateToProps =(state:any) =>{\r\n//     return{\r\n//   transitionList:state.transitionPart.transitions,\r\n//   initS:state.statusPart.init1,\r\n//   statusesList:state.statusPart.statuses\r\n\r\n// }\r\n// }\r\n\r\n// export default connect(myMapStateToProps,{deleteStatus,initStatus,addStatus,deleteTransition,getStatuses})(StatusList); \r\n\r\n\r\n\r\n","D:\\devtask\\client\\devtask\\src\\components\\Status.tsx",[],"D:\\devtask\\client\\devtask\\src\\store\\actions\\index.ts",[],"D:\\devtask\\client\\devtask\\src\\store\\actions\\status.ts",[],"D:\\devtask\\client\\devtask\\src\\store\\actions\\transition.ts",[],"D:\\devtask\\client\\devtask\\src\\components\\TransitionList.tsx",["97","98","99","100"],"import { ReactChild, ReactFragment, ReactPortal, useEffect, useState } from \"react\";\r\nimport { connect, } from 'react-redux';\r\n// import { isTemplateExpression } from \"typescript\";\r\nimport { status } from \"../models/status\";\r\nimport { transition } from \"../models/transition\";\r\n import {deleteTransition,addTransition, getTransitions}from '../store/actions'\r\nimport Transition from \"./Transition\";\r\nconst TransitionList= (props: any) => {\r\n    useEffect(() => {\r\n        props.getTransitions();\r\n      },[]);\r\n    const [txt2, setTxt2] = useState<HTMLInputElement|null>();\r\n    const [from, setFrom] = useState<HTMLSelectElement|null>();\r\n    const [to, setTo] = useState<HTMLSelectElement|null>();\r\n    const deleteTransition1=(name:string)=>{\r\n        props.deleteTransition(name);\r\n      }\r\n    const add=(name:string,from:string,to:string)=>{\r\n//should avoid ''?\r\nlet fromtoset:status=new status(from);\r\nlet totoset:status=new status(to);\r\nlet tran:transition=new transition(name,fromtoset,totoset);\r\nprops.addTransition(tran);\r\n      }\r\n    return ( <>\r\n      <h3>Add transitions</h3>\r\n      name:<input type=\"test\" \tref={(element) => {  setTxt2 (element) ; }}></input>\r\n     from <select name=\"from\" ref={(element) => {  setFrom (element) } } > {props.statusesList.map((item:status)=>{ return<option value={item.name}>{item.name}</option>})}</select>\r\n      to<select name=\"to\" ref={(element) => {  setTo (element) } }>{props.statusesList.map((item: status)=>{console.log(\"n\",item.name);return <option value={item.name}>{item.name}</option>})}</select>\r\n      <button onClick={()=>{add(txt2?txt2.value:'',from?from.value:'',to?to.value:'')}}>add</button>\r\n    {\r\nprops.transitionList.map((item: any, i: any)=>{\r\n          return <Transition key={i}\r\n           transitionName={item.name} \r\n           transitionFrom={item.from.name}\r\n           transitionTo={item.to.name}\r\n           delete={deleteTransition1} />;\r\n        })\r\n        }   \r\n    </> );\r\n}\r\nconst myMapStateToProps =(state:any) =>{\r\n    return{\r\n  transitionList:state.transitionPart.transitions,\r\n  statusesList:state.statusPart.statuses\r\n}\r\n}\r\nexport default connect(myMapStateToProps,{deleteTransition,addTransition, getTransitions})(  TransitionList );\r\n\r\n","D:\\devtask\\client\\devtask\\src\\components\\Transition.tsx",[],"D:\\devtask\\client\\devtask\\src\\components\\Home.tsx",["101"],"D:\\devtask\\client\\devtask\\src\\components\\Redbutton.tsx",["102"],"import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAllStatus, deleteAllTransition } from \"../store/actions\";\r\n\r\n import './RedButton.css'\r\n const RedButton = (props: any) => {\r\n    const [b, setB] = useState<HTMLButtonElement | null>();\r\nconst deleteAll=()=>{\r\n    props.deleteAllStatus();props.deleteAllTransition()\r\n}\r\nconst fstyle=()=>{\r\n    return {\r\n        \"border-radius\":\"50px\",\r\n        \"height\": \"100px\" ,\r\n        \"width\":\"100px\"  ,\r\n        \"font-size\": \"2em\",\r\n        \"background-color\":\"red\"\r\n\r\n    }\r\n}\r\n// React.HTMLAttributes<HTMLButtonElement>.style?: React.CSSProperties | undefined\r\n    return (\r\n        <>\r\n      \r\n        <button type=\"button\" \r\n    ref={(element) => {  setB (element) ; }}\r\nstyle={fstyle()}\r\n    value=\"demo\" onClick={deleteAll}>clear\r\n    </button>\r\n        </>\r\n      );\r\n}\r\n  \r\nconst myMapStateToProps =(state:any) =>{\r\n    return{\r\n  transitionList:state.transitionPart.transitions,\r\n  statusesList:state.statusPart.statuses\r\n    }\r\n}\r\nexport default connect(myMapStateToProps,{deleteAllStatus,deleteAllTransition})(RedButton);",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":17},{"ruleId":"107","severity":1,"message":"111","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":18},{"ruleId":"107","severity":1,"message":"112","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":18},{"ruleId":"107","severity":1,"message":"113","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":22},{"ruleId":"107","severity":1,"message":"114","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"107","severity":1,"message":"115","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":23},{"ruleId":"107","severity":1,"message":"116","line":10,"column":10,"nodeType":"109","messageId":"110","endLine":10,"endColumn":16},{"ruleId":"107","severity":1,"message":"117","line":11,"column":10,"nodeType":"109","messageId":"110","endLine":11,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":17,"column":3,"nodeType":"120","endLine":17,"endColumn":5,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":21,"column":11,"nodeType":"124","messageId":"125","endLine":21,"endColumn":13},{"ruleId":"107","severity":1,"message":"126","line":35,"column":8,"nodeType":"109","messageId":"110","endLine":35,"endColumn":11},{"ruleId":"107","severity":1,"message":"127","line":35,"column":13,"nodeType":"109","messageId":"110","endLine":35,"endColumn":19},{"ruleId":"122","severity":1,"message":"128","line":42,"column":43,"nodeType":"124","messageId":"125","endLine":42,"endColumn":45},{"ruleId":"122","severity":1,"message":"128","line":54,"column":62,"nodeType":"124","messageId":"125","endLine":54,"endColumn":64},{"ruleId":"122","severity":1,"message":"128","line":60,"column":76,"nodeType":"124","messageId":"125","endLine":60,"endColumn":78},{"ruleId":"118","severity":1,"message":"129","line":69,"column":4,"nodeType":"120","endLine":69,"endColumn":38,"suggestions":"130"},{"ruleId":"107","severity":1,"message":"131","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":20},{"ruleId":"107","severity":1,"message":"132","line":1,"column":22,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"107","severity":1,"message":"133","line":1,"column":37,"nodeType":"109","messageId":"110","endLine":1,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":11,"column":9,"nodeType":"120","endLine":11,"endColumn":11,"suggestions":"134"},{"ruleId":"107","severity":1,"message":"135","line":7,"column":11,"nodeType":"109","messageId":"110","endLine":7,"endColumn":17},{"ruleId":"107","severity":1,"message":"136","line":7,"column":12,"nodeType":"109","messageId":"110","endLine":7,"endColumn":13},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'StatusList' is defined but never used.","'TransitionList' is defined but never used.","'FunctionComponent' is defined but never used.","'statusReducer' is defined but never used.","'hrtime' is defined but never used.","'queryHelpers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["139"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'all' is assigned a value but never used.","'setAll' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'helpisorphon'. Either include it or remove the dependency array.",["140"],"'ReactChild' is defined but never used.","'ReactFragment' is defined but never used.","'ReactPortal' is defined but never used.",["141"],"'fstyle' is assigned a value but never used.","'b' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"142","fix":"146"},"Update the dependencies array to be: [props]",{"range":"147","text":"148"},"Update the dependencies array to be: [helpisorphon, props.initS, props.transitionList]",{"range":"149","text":"150"},{"range":"151","text":"148"},[601,603],"[props]",[2271,2305],"[helpisorphon, props.initS, props.transitionList]",[504,506]]