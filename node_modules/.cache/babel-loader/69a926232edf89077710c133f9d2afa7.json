{"ast":null,"code":"import axios from 'axios';\nexport const addTransitiontoreducer = transition => {\n  return {\n    type: \"TRANSITIONADD\",\n    payloud: transition\n  };\n};\nexport const addTransition = transition => {\n  return dispatch => {\n    axios.post(`https://localhost:44341/transition/add`, transition).then(succ => {\n      dispatch(addTransitiontoreducer(succ.data));\n      console.log(\"s add\", succ);\n    }).catch(er => {\n      console.log(er.message);\n    });\n  };\n};\nexport const deleteAll = () => {\n  return {\n    type: \"DELETEALL\",\n    payload: null\n  };\n};\nexport const deleteAllTransition = () => {\n  return dispatch => {\n    axios.get(`https://localhost:44341/transition/deleteall`).then(succ => {\n      console.log(\"s deleteall\");\n      dispatch(deleteAll());\n    }).catch(er => {\n      console.log(er.message);\n    });\n  };\n};\nexport const deleteTransitiontoreducer = name => {\n  return {\n    type: \"TRANSITIONDELETE\",\n    payloud: name\n  };\n};\nexport const deleteTransition = name => {\n  return dispatch => {\n    axios.get(\"https://localhost:44341/transition/delete\" + name).then(() => {\n      //  console.log(\"s delete\",succ.data);\n      dispatch(deleteTransitiontoreducer(name));\n    }).catch(er => {\n      console.log(er.message);\n    });\n  };\n};\nexport const fillTransitiontoreducer = transitions => {\n  return {\n    type: \"TRANSITIONFILL\",\n    payloud: transitions\n  };\n};\nexport const getTransitions = () => {\n  return dispatch => {\n    axios.get(`https://localhost:44341/transition/all`).then(succ => {\n      console.log(succ.data);\n      dispatch(fillTransitiontoreducer(succ.data)); // return succ.data.length;\n    }).catch(er => {\n      console.log(er.message);\n    });\n  };\n};","map":{"version":3,"sources":["D:/devtask/client/devtask/src/store/actions/transition.ts"],"names":["axios","addTransitiontoreducer","transition","type","payloud","addTransition","dispatch","post","then","succ","data","console","log","catch","er","message","deleteAll","payload","deleteAllTransition","get","deleteTransitiontoreducer","name","deleteTransition","fillTransitiontoreducer","transitions","getTransitions"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,sBAAsB,GAAEC,UAAD,IAAyB;AAC7D,SAAO;AACHC,IAAAA,IAAI,EAAC,eADF;AAEHC,IAAAA,OAAO,EAACF;AAFL,GAAP;AAIC,CALM;AAMP,OAAO,MAAMG,aAAa,GAAIH,UAAD,IAA2B;AACpD,SAAQI,QAAD,IAAmC;AAC1CN,IAAAA,KAAK,CAACO,IAAN,CAAY,wCAAZ,EAAoDL,UAApD,EAAgEM,IAAhE,CAAsEC,IAAD,IAAU;AAEvEH,MAAAA,QAAQ,CAACL,sBAAsB,CAACQ,IAAI,CAACC,IAAN,CAAvB,CAAR;AACMC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,IAApB;AACT,KAJL,EAKKI,KALL,CAKYC,EAAD,IAAQ;AAEXH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAE,CAACC,OAAf;AACH,KARL;AASC,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMC,SAAS,GAAC,MAAM;AACzB,SAAM;AACLb,IAAAA,IAAI,EAAC,WADA;AAELc,IAAAA,OAAO,EAAC;AAFH,GAAN;AAIH,CALM;AAMP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrC,SAAQZ,QAAD,IAAmC;AAC1CN,IAAAA,KAAK,CAACmB,GAAN,CAAW,8CAAX,EAA0DX,IAA1D,CAAgEC,IAAD,IAAU;AACnEE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACEN,MAAAA,QAAQ,CAAEU,SAAS,EAAX,CAAR;AAEH,KAJL,EAIOH,KAJP,CAIcC,EAAD,IAAQ;AAEbH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAE,CAACC,OAAf;AACH,KAPL;AAQC,GATD;AAUH,CAXM;AAYP,OAAO,MAAMK,yBAAyB,GAAEC,IAAD,IAAe;AAClD,SAAO;AACHlB,IAAAA,IAAI,EAAC,kBADF;AAEHC,IAAAA,OAAO,EAACiB;AAFL,GAAP;AAIE,CALC;AAMF,OAAO,MAAOC,gBAAgB,GAAGD,IAAD,IAAiB;AAC9C,SAAQf,QAAD,IAAmC;AAC1CN,IAAAA,KAAK,CAACmB,GAAN,CAAU,8CAA4CE,IAAtD,EAA4Db,IAA5D,CAAiE,MAAM;AACnE;AACIF,MAAAA,QAAQ,CAACc,yBAAyB,CAACC,IAAD,CAA1B,CAAR;AAEH,KAJL,EAKKR,KALL,CAKYC,EAAD,IAAQ;AAEXH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAE,CAACC,OAAf;AACH,KARL;AASC,GAVD;AAWH,CAZO;AAaP,OAAO,MAAMQ,uBAAuB,GAAEC,WAAD,IAA+B;AAClE,SAAO;AACHrB,IAAAA,IAAI,EAAC,gBADF;AAEHC,IAAAA,OAAO,EAACoB;AAFL,GAAP;AAIF,CALO;AAOP,OAAO,MAAOC,cAAc,GAAG,MAAM;AAClC,SAAQnB,QAAD,IAAwE;AAC3EN,IAAAA,KAAK,CAACmB,GAAN,CAAW,wCAAX,EAAoDX,IAApD,CAA0DC,IAAD,IAAU;AAC/DE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,IAAjB;AAEAJ,MAAAA,QAAQ,CAACiB,uBAAuB,CAACd,IAAI,CAACC,IAAN,CAAxB,CAAR,CAH+D,CAK/D;AACH,KAND,EAMGG,KANH,CAMUC,EAAD,IAAQ;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAYE,EAAE,CAACC,OAAf;AACH,KARD;AASH,GAVD;AAWH,CAZO","sourcesContent":["\r\n\r\nimport axios from 'axios'\r\nimport { transition } from '../../models/transition'\r\n\r\nexport const addTransitiontoreducer=(transition:transition)=>{\r\nreturn {\r\n    type:\"TRANSITIONADD\",\r\n    payloud:transition\r\n}\r\n}\r\nexport const addTransition = (transition:transition) => {\r\n    return (dispatch: (arg0: any) => void) => {\r\n    axios.post(`https://localhost:44341/transition/add`,transition).then((succ) => {\r\n  \r\n            dispatch(addTransitiontoreducer(succ.data));\r\n                  console.log(\"s add\",succ); \r\n        })\r\n        .catch((er) => {\r\n          \r\n            console.log(er.message)         \r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteAll=()  =>{\r\n    return{\r\n     type:\"DELETEALL\",\r\n     payload:null\r\n    }\r\n}\r\nexport const deleteAllTransition = () => {\r\n    return (dispatch: (arg0: any) => void) => {\r\n    axios.get(`https://localhost:44341/transition/deleteall`).then((succ) => {\r\n          console.log(\"s deleteall\");\r\n            dispatch( deleteAll());\r\n           \r\n        }).catch((er) => {\r\n          \r\n            console.log(er.message)         \r\n        })\r\n    }\r\n} \r\nexport const deleteTransitiontoreducer=(name:string)=>{\r\n    return {\r\n        type:\"TRANSITIONDELETE\",\r\n        payloud:name\r\n    }\r\n     }\r\n     export const  deleteTransition= (name:string) => {\r\n        return (dispatch: (arg0: any) => void) => {\r\n        axios.get(\"https://localhost:44341/transition/delete\"+name).then(() => {\r\n            //  console.log(\"s delete\",succ.data);\r\n                dispatch(deleteTransitiontoreducer(name));\r\n               \r\n            })\r\n            .catch((er) => {\r\n              \r\n                console.log(er.message)         \r\n            })\r\n        }\r\n    }\r\n     export const fillTransitiontoreducer=(transitions: transition[] )=> {\r\n       return {\r\n           type:\"TRANSITIONFILL\",\r\n           payloud:transitions\r\n       }\r\n    }\r\n    \r\n     export const  getTransitions = () => {\r\n        return (dispatch: (arg0: { type: string; payloud: transition[]; }) => void) => {\r\n            axios.get(`https://localhost:44341/transition/all`).then((succ) => {\r\n                console.log(succ.data);\r\n    \r\n                dispatch(fillTransitiontoreducer(succ.data))\r\n              \r\n                // return succ.data.length;\r\n            }).catch((er) => {\r\n                console.log(er.message)\r\n            })\r\n        }\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}