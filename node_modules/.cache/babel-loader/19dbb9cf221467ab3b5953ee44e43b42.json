{"ast":null,"code":"var _jsxFileName = \"D:\\\\devtask\\\\client\\\\devtask\\\\src\\\\components\\\\Redbutton.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteAllStatus, deleteAllTransition } from \"../store/actions\";\nimport './RedButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RedButton = props => {\n  _s();\n\n  const [b, setB] = useState();\n\n  const deleteAll = () => {};\n\n  const fstyle = () => {\n    return {\n      \"border-radius\": \"50px\",\n      \"height\": \"100px\",\n      \"width\": \"100px\",\n      \"font-size\": \"2em\",\n      \"background-color\": \"red\"\n    };\n  }; // React.HTMLAttributes<HTMLButtonElement>.style?: React.CSSProperties | undefined\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      ref: element => {\n        setB(element);\n      },\n      style: fstyle(),\n      value: \"demo\",\n      onClick: deleteAll,\n      children: \"clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(RedButton, \"nwfKJ83qh7+iiGsxbcppKDUZlZk=\");\n\n_c = RedButton;\n\nconst myMapStateToProps = state => {\n  return {\n    transitionList: state.transitionPart.transitions,\n    statusesList: state.statusPart.statuses\n  };\n};\n\nexport default connect(myMapStateToProps, {\n  deleteAllStatus,\n  deleteAllTransition\n})(RedButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"RedButton\");","map":{"version":3,"sources":["D:/devtask/client/devtask/src/components/Redbutton.tsx"],"names":["useState","connect","deleteAllStatus","deleteAllTransition","RedButton","props","b","setB","deleteAll","fstyle","element","myMapStateToProps","state","transitionList","transitionPart","transitions","statusesList","statusPart","statuses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,kBAArD;AAEC,OAAO,iBAAP;;;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAAA;;AAC/B,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYP,QAAQ,EAA1B;;AACJ,QAAMQ,SAAS,GAAC,MAAI,CAEnB,CAFD;;AAGA,QAAMC,MAAM,GAAC,MAAI;AACb,WAAO;AACH,uBAAgB,MADb;AAEH,gBAAU,OAFP;AAGH,eAAQ,OAHL;AAIH,mBAAa,KAJV;AAKH,0BAAmB;AALhB,KAAP;AAQH,GATD,CALmC,CAenC;;;AACI,sBACI;AAAA,2BAEA;AAAQ,MAAA,IAAI,EAAC,QAAb;AACJ,MAAA,GAAG,EAAGC,OAAD,IAAa;AAAGH,QAAAA,IAAI,CAAEG,OAAF,CAAJ;AAAkB,OADnC;AAER,MAAA,KAAK,EAAED,MAAM,EAFL;AAGJ,MAAA,KAAK,EAAC,MAHF;AAGS,MAAA,OAAO,EAAED,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA,mBADJ;AAUH,CA1BA;;GAAMJ,S;;KAAAA,S;;AA4BP,MAAMO,iBAAiB,GAAGC,KAAD,IAAc;AACnC,SAAM;AACRC,IAAAA,cAAc,EAACD,KAAK,CAACE,cAAN,CAAqBC,WAD5B;AAERC,IAAAA,YAAY,EAACJ,KAAK,CAACK,UAAN,CAAiBC;AAFtB,GAAN;AAIH,CALD;;AAMA,eAAejB,OAAO,CAACU,iBAAD,EAAmB;AAACT,EAAAA,eAAD;AAAiBC,EAAAA;AAAjB,CAAnB,CAAP,CAAiEC,SAAjE,CAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteAllStatus, deleteAllTransition } from \"../store/actions\";\r\n\r\n import './RedButton.css'\r\n const RedButton = (props: any) => {\r\n    const [b, setB] = useState<HTMLButtonElement | null>();\r\nconst deleteAll=()=>{\r\n\r\n}\r\nconst fstyle=()=>{\r\n    return {\r\n        \"border-radius\":\"50px\",\r\n        \"height\": \"100px\" ,\r\n        \"width\":\"100px\"  ,\r\n        \"font-size\": \"2em\",\r\n        \"background-color\":\"red\"\r\n\r\n    }\r\n}\r\n// React.HTMLAttributes<HTMLButtonElement>.style?: React.CSSProperties | undefined\r\n    return (\r\n        <>\r\n      \r\n        <button type=\"button\" \r\n    ref={(element) => {  setB (element) ; }}\r\nstyle={fstyle()}\r\n    value=\"demo\" onClick={deleteAll}>clear\r\n    </button>\r\n        </>\r\n      );\r\n}\r\n  \r\nconst myMapStateToProps =(state:any) =>{\r\n    return{\r\n  transitionList:state.transitionPart.transitions,\r\n  statusesList:state.statusPart.statuses\r\n    }\r\n}\r\nexport default connect(myMapStateToProps,{deleteAllStatus,deleteAllTransition})(RedButton);"]},"metadata":{},"sourceType":"module"}