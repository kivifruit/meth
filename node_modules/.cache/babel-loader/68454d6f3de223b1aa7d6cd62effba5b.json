{"ast":null,"code":"import { transition } from \"../../models/transition\";\nimport { status } from '../../models/status'; //should connect to status reducer\n\nconst initilize = {\n  transitions: [new transition(\"a\", new status(\"start\"), new status(\"cancle\"))]\n};\nexport const transitionReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initilize;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"TRANSITIONADD\":\n      return { ...state,\n        songs: [...state.transitions, action.payloud]\n      };\n\n    case \"TRANSITIONDELETE\":\n      //    let s1= state.songs.filter(s=>{s===action.payloud})\n      //    state.songs.map((s,i=>{s===s1?state.songs.splice(i,1):null}))\n      let list = state.transitions.filter(t => {\n        return t.name !== action.payloud.name;\n      });\n      return { ...state,\n        transitions: list\n      };\n  }\n\n  return state;\n};","map":{"version":3,"sources":["D:/devtask/client/devtask/src/store/reducers/transition.ts"],"names":["transition","status","initilize","transitions","transitionReducer","state","action","type","songs","payloud","list","filter","t","name"],"mappings":"AAAA,SAASA,UAAT,QAA2B,yBAA3B;AACA,SAAQC,MAAR,QAAoB,qBAApB,C,CACA;;AACA,MAAMC,SAAS,GAAC;AACZC,EAAAA,WAAW,EAAC,CAAC,IAAIH,UAAJ,CAAe,GAAf,EAAmB,IAAIC,MAAJ,CAAW,OAAX,CAAnB,EAAuC,IAAIA,MAAJ,CAAW,QAAX,CAAvC,CAAD;AADA,CAAhB;AAIA,OAAO,MAAMG,iBAAiB,GAAC,YAA8D;AAAA,MAA7DC,KAA6D,uEAAvDH,SAAuD;AAAA,MAA7CI,MAA6C;;AACzF,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,eAAL;AACD,aAAM,EAAC,GAAGF,KAAJ;AAAUG,QAAAA,KAAK,EAAC,CAAC,GAAGH,KAAK,CAACF,WAAV,EAAsBG,MAAM,CAACG,OAA7B;AAAhB,OAAN;;AACA,SAAK,kBAAL;AACA;AACA;AACA,UAAIC,IAAiB,GAAEL,KAAK,CAACF,WAAN,CAAkBQ,MAAlB,CAAyBC,CAAC,IAAE;AAAC,eAAOA,CAAC,CAACC,IAAF,KAASP,MAAM,CAACG,OAAP,CAAeI,IAA/B;AAAoC,OAAjE,CAAvB;AACI,aAAM,EAAC,GAAGR,KAAJ;AAAUF,QAAAA,WAAW,EAACO;AAAtB,OAAN;AAPJ;;AASJ,SAAOL,KAAP;AACC,CAXM","sourcesContent":["import { transition } from \"../../models/transition\"\r\nimport {status}from '../../models/status'\r\n//should connect to status reducer\r\nconst initilize={\r\n    transitions:[new transition(\"a\",new status(\"start\"),new status(\"cancle\"))]\r\n\r\n}\r\nexport const transitionReducer=(state=initilize,action: { type: any; payloud: transition })=>{\r\n    switch(action.type){\r\n     case \"TRANSITIONADD\":\r\n    return{...state,songs:[...state.transitions,action.payloud]}\r\n    case \"TRANSITIONDELETE\":\r\n    //    let s1= state.songs.filter(s=>{s===action.payloud})\r\n    //    state.songs.map((s,i=>{s===s1?state.songs.splice(i,1):null}))\r\n    let list:transition[]= state.transitions.filter(t=>{return t.name!==action.payloud.name})\r\n        return{...state,transitions:list}\r\n}\r\nreturn state;\r\n}"]},"metadata":{},"sourceType":"module"}