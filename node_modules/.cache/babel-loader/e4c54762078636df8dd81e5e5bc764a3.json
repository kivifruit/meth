{"ast":null,"code":"const initilize = {\n  statuses: [],\n  init: null\n};\nexport const statusReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initilize;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"STATUSINIT\":\n      return { ...state,\n        select: action.payloud\n      };\n\n    case \"STATUSADD\":\n      return { ...state,\n        songs: [...state.statuses, action.payloud]\n      };\n\n    case \"STATUSDELETE\":\n      //    let s1= state.songs.filter(s=>{s===action.payloud})\n      //    state.songs.map((s,i=>{s===s1?state.songs.splice(i,1):null}))\n      let list = state.statuses.filter(s => {\n        s !== action.payloud;\n      });\n      return { ...state,\n        statuses: list\n      };\n  }\n\n  return state;\n};","map":{"version":3,"sources":["D:/devtask/client/devtask/src/store/reducers/status.ts"],"names":["initilize","statuses","init","statusReducer","state","action","type","select","payloud","songs","list","filter","s"],"mappings":"AAEA,MAAMA,SAAS,GAAC;AACZC,EAAAA,QAAQ,EAAC,EADG;AAEZC,EAAAA,IAAI,EAAC;AAFO,CAAhB;AAIA,OAAO,MAAMC,aAAa,GAAC,YAA0B;AAAA,MAAzBC,KAAyB,uEAAnBJ,SAAmB;AAAA,MAATK,MAAS;;AACjD,UAAOA,MAAM,CAACC,IAAd;AACA,SAAK,YAAL;AACJ,aAAM,EAAC,GAAGF,KAAJ;AAAUG,QAAAA,MAAM,EAACF,MAAM,CAACG;AAAxB,OAAN;;AACK,SAAK,WAAL;AACD,aAAM,EAAC,GAAGJ,KAAJ;AAAUK,QAAAA,KAAK,EAAC,CAAC,GAAGL,KAAK,CAACH,QAAV,EAAmBI,MAAM,CAACG,OAA1B;AAAhB,OAAN;;AACA,SAAK,cAAL;AACA;AACA;AACA,UAAIE,IAAI,GAAEN,KAAK,CAACH,QAAN,CAAeU,MAAf,CAAsBC,CAAC,IAAE;AAACA,QAAAA,CAAC,KAAGP,MAAM,CAACG,OAAX;AAAmB,OAA7C,CAAV;AACI,aAAM,EAAC,GAAGJ,KAAJ;AAAUH,QAAAA,QAAQ,EAACS;AAAnB,OAAN;AATJ;;AAWJ,SAAON,KAAP;AACC,CAbM","sourcesContent":["\r\n\r\nconst initilize={\r\n    statuses:[],\r\n    init:null\r\n}\r\nexport const statusReducer=(state=initilize,action)=>{\r\n    switch(action.type){\r\n    case \"STATUSINIT\":\r\nreturn{...state,select:action.payloud};\r\n     case \"STATUSADD\":\r\n    return{...state,songs:[...state.statuses,action.payloud]}\r\n    case \"STATUSDELETE\":\r\n    //    let s1= state.songs.filter(s=>{s===action.payloud})\r\n    //    state.songs.map((s,i=>{s===s1?state.songs.splice(i,1):null}))\r\n    let list= state.statuses.filter(s=>{s!==action.payloud})\r\n        return{...state,statuses:list}\r\n}\r\nreturn state;\r\n}"]},"metadata":{},"sourceType":"module"}