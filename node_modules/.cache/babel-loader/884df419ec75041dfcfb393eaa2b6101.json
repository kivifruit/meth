{"ast":null,"code":"import { status } from \"../../models/status\";\nconst initilize = {\n  statuses: [new status(\"m\"), new status(\"j\")],\n  init1: null\n};\nexport const statusReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initilize;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"STATUSDELETE\":\n      let list = state.statuses.filter(s => {\n        return s.name !== action.payloud.name;\n      });\n      let init = state.init1 && state.init1 !== action.payloud ? state.init1 : null;\n      return { ...state,\n        statuses: list,\n        init1: init\n      };\n\n    case \"STATUSINIT\":\n      console.log(action.payloud);\n      return { ...state,\n        init1: action.payloud\n      };\n\n    case \"STATUSADD\":\n      return { ...state,\n        statuses: [...state.statuses, action.payloud]\n      };\n\n    case \"STATUSFILL\":\n      return { ...state,\n        statuses: action.payloud\n      };\n\n    case \"DELETEALL\":\n      return { ...state,\n        statuses: [],\n        init: null\n      };\n  } //    let s1= state.songs.filter(s=>{s===action.payloud})\n  //    state.songs.map((s,i=>{s===s1?state.songs.splice(i,1):null}))\n  //   ;list\n\n\n  return state;\n};","map":{"version":3,"sources":["D:/devtask/client/devtask/src/store/reducers/status.ts"],"names":["status","initilize","statuses","init1","statusReducer","state","action","type","list","filter","s","name","payloud","init","console","log"],"mappings":"AAAA,SAASA,MAAT,QAAuB,qBAAvB;AAGA,MAAMC,SAAS,GAAC;AACZC,EAAAA,QAAQ,EAAC,CAAC,IAAIF,MAAJ,CAAW,GAAX,CAAD,EAAiB,IAAIA,MAAJ,CAAW,GAAX,CAAjB,CADG;AAEZG,EAAAA,KAAK,EAAC;AAFM,CAAhB;AAKA,OAAO,MAAMC,aAAa,GAAC,YAAwD;AAAA,MAAvDC,KAAuD,uEAAjDJ,SAAiD;AAAA,MAAvCK,MAAuC;;AAC/E,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AAAqB,UAAIC,IAAa,GAAEH,KAAK,CAACH,QAAN,CAAeO,MAAf,CAAsBC,CAAC,IAAE;AAAC,eAAOA,CAAC,CAACC,IAAF,KAASL,MAAM,CAACM,OAAP,CAAeD,IAA/B;AAAoC,OAA9D,CAAnB;AACrB,UAAIE,IAAI,GAAGR,KAAK,CAACF,KAAN,IAAeE,KAAK,CAACF,KAAN,KAAgBG,MAAM,CAACM,OAAtC,GAAgDP,KAAK,CAACF,KAAtD,GAA8D,IAAzE;AACA,aAAM,EAAC,GAAGE,KAAJ;AAAUH,QAAAA,QAAQ,EAACM,IAAnB;AAAwBL,QAAAA,KAAK,EAACU;AAA9B,OAAN;;AACJ,SAAK,YAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACM,OAAnB;AACR,aAAM,EAAC,GAAGP,KAAJ;AAAUF,QAAAA,KAAK,EAACG,MAAM,CAACM;AAAvB,OAAN;;AACK,SAAK,WAAL;AACD,aAAM,EAAC,GAAGP,KAAJ;AAAUH,QAAAA,QAAQ,EAAC,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAmBI,MAAM,CAACM,OAA1B;AAAnB,OAAN;;AACA,SAAK,YAAL;AACI,aAAM,EAAC,GAAGP,KAAJ;AAAUH,QAAAA,QAAQ,EAACI,MAAM,CAACM;AAA1B,OAAN;;AACJ,SAAK,WAAL;AACI,aAAO,EAAC,GAAGP,KAAJ;AAAUH,QAAAA,QAAQ,EAAC,EAAnB;AAAsBW,QAAAA,IAAI,EAAC;AAA3B,OAAP;AAZJ,GAD+E,CAkB/E;AACA;AACJ;;;AAEE,SAAOR,KAAP;AACD,CAvBM","sourcesContent":["import { status } from \"../../models/status\";\r\n\r\n\r\nconst initilize={\r\n    statuses:[new status(\"m\"),new status(\"j\")],\r\n    init1:null\r\n}\r\n\r\nexport const statusReducer=(state=initilize,action: { type: any; payloud: any; })=>{\r\n    switch(action.type){\r\n        case \"STATUSDELETE\": let list:status[]= state.statuses.filter(s=>{return s.name!==action.payloud.name});\r\n        let init = state.init1 && state.init1 !== action.payloud ? state.init1 : null;\r\n        return{...state,statuses:list,init1:init}\r\n    case \"STATUSINIT\":\r\n        console.log(action.payloud)\r\nreturn{...state,init1:action.payloud}; \r\n     case \"STATUSADD\":\r\n    return{...state,statuses:[...state.statuses,action.payloud]}\r\n    case \"STATUSFILL\":\r\n        return{...state,statuses:action.payloud}\r\n    case \"DELETEALL\":\r\n        return {...state,statuses:[],init:null}\r\n}\r\n            \r\n        \r\n       \r\n    //    let s1= state.songs.filter(s=>{s===action.payloud})\r\n    //    state.songs.map((s,i=>{s===s1?state.songs.splice(i,1):null}))\r\n//   ;list\r\n      \r\n  return state;\r\n}"]},"metadata":{},"sourceType":"module"}