{"ast":null,"code":"var _jsxFileName = \"D:\\\\devtask\\\\client\\\\devtask\\\\src\\\\components\\\\StatusList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { status } from \"../models/status\";\nimport { deleteStatus, initStatus, addStatus } from \"../store/actions\";\nimport Status from './Status';\nimport { useState } from \"react\"; // interface StatusList Props {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet inputi = /*#__PURE__*/React.createRef(); // }\n\nconst StatusList = props => {\n  _s();\n\n  const add = name => {\n    if (name != '') {\n      let newstatus = new status(name);\n      props.addStatus(newstatus);\n    }\n  };\n\n  const deleteStatus = status => {\n    props.deleteStatus(status);\n  };\n\n  const init = s => {\n    props.initStatus(s);\n  };\n\n  const [txt2, setTxt2] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"test\",\n      ref: element => {\n        setTxt2(element);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        add(txt2 ? txt2.value : '');\n      },\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 77\n    }, this), props.statusesList.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(Status, {\n        status: item,\n        delete: deleteStatus,\n        initStatus: props.initStatus,\n        init: init\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(StatusList, \"aBsrGcfWsppjMVwMorVJJsgVATo=\");\n\n_c = StatusList;\n\nconst myMapStateToProps = state => {\n  return {\n    initStatus: state.statusPart.init1,\n    statusesList: state.statusPart.statuses\n  };\n};\n\nexport default connect(myMapStateToProps, {\n  deleteStatus,\n  initStatus,\n  addStatus\n})(StatusList);\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusList\");","map":{"version":3,"sources":["D:/devtask/client/devtask/src/components/StatusList.tsx"],"names":["React","connect","status","deleteStatus","initStatus","addStatus","Status","useState","inputi","createRef","StatusList","props","add","name","newstatus","init","s","txt2","setTxt2","element","value","statusesList","map","item","i","myMapStateToProps","state","statusPart","init1","statuses"],"mappings":";;;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,OAAT,QAAyB,aAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,SAASC,YAAT,EAAsBC,UAAtB,EAAiCC,SAAjC,QAAkD,kBAAlD;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;;;AACC,IAAIC,MAAM,gBAAGR,KAAK,CAACS,SAAN,EAAb,C,CACD;;AACA,MAAMC,UAAU,GAAKC,KAAD,IAAgB;AAAA;;AACpC,QAAMC,GAAG,GAAEC,IAAD,IAAe;AACvB,QAAIA,IAAI,IAAE,EAAV,EAAa;AACf,UAAKC,SAAgB,GAAC,IAAIZ,MAAJ,CAAWW,IAAX,CAAtB;AACAF,MAAAA,KAAK,CAACN,SAAN,CAAgBS,SAAhB;AACC;AACA,GALD;;AAMA,QAAMX,YAAY,GAAED,MAAD,IAAiB;AAClCS,IAAAA,KAAK,CAACR,YAAN,CAAmBD,MAAnB;AACD,GAFD;;AAGA,QAAMa,IAAI,GAAEC,CAAD,IAAY;AACrBL,IAAAA,KAAK,CAACP,UAAN,CAAiBY,CAAjB;AACD,GAFD;;AAGE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AACE,sBAAU;AAAA,4BACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,eAEV;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,GAAG,EAAGY,OAAD,IAAa;AAAGD,QAAAA,OAAO,CAAEC,OAAF,CAAP;AAAqB;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFU,eAE8D;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACP,QAAAA,GAAG,CAACK,IAAI,GAACA,IAAI,CAACG,KAAN,GAAY,EAAjB,CAAH;AAAwB,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF9D,EAIdT,KAAK,CAACU,YAAN,CAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAYC,CAAZ,KAAqB;AAClC,0BAAO,QAAC,MAAD;AAAgB,QAAA,MAAM,EAAED,IAAxB;AAA8B,QAAA,MAAM,EAAEpB,YAAtC;AAAoD,QAAA,UAAU,EAAEQ,KAAK,CAACP,UAAtE;AAAkF,QAAA,IAAI,EAAEW;AAAxF,SAAaS,CAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AAGD,KAJT,CAJc;AAAA,kBAAV;AAcH,CA5BD;;GAAMd,U;;KAAAA,U;;AA8BN,MAAMe,iBAAiB,GAAGC,KAAD,IAAc;AACnC,SAAM;AACRtB,IAAAA,UAAU,EAACsB,KAAK,CAACC,UAAN,CAAiBC,KADpB;AAERP,IAAAA,YAAY,EAACK,KAAK,CAACC,UAAN,CAAiBE;AAFtB,GAAN;AAIH,CALD;;AAOA,eAAe5B,OAAO,CAACwB,iBAAD,EAAmB;AAACtB,EAAAA,YAAD;AAAcC,EAAAA,UAAd;AAAyBC,EAAAA;AAAzB,CAAnB,CAAP,CAA+DK,UAA/D,CAAf","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport { connect, } from 'react-redux';\r\nimport { status } from \"../models/status\";\r\n\r\nimport { deleteStatus,initStatus,addStatus } from \"../store/actions\";\r\nimport { statusReducer } from \"../store/reducers\";\r\nimport Status from './Status';\r\nimport { useState } from \"react\";\r\n\r\n// interface StatusList Props {\r\n let inputi = React.createRef();\r\n// }\r\nconst StatusList  = (props: any) => {\r\nconst add=(name:string)=>{\r\n  if (name!=''){\r\nlet  newstatus:status=new status(name);\r\nprops.addStatus(newstatus);\r\n}\r\n}\r\nconst deleteStatus=(status:status)=>{\r\n  props.deleteStatus(status);\r\n}\r\nconst init=(s:status)=>{\r\n  props.initStatus(s);\r\n}\r\n  const [txt2, setTxt2] = useState<HTMLInputElement|null>();\r\n    return  ( <>\r\n    <h1>Add status</h1>\r\n    <input type=\"test\" \tref={(element) => {  setTxt2 (element) ; }}></input><button onClick={()=>{add(txt2?txt2.value:'')}}>add</button>\r\n    {\r\nprops.statusesList.map((item: any, i: any)=>{\r\n          return <Status key={i} status={item} delete={deleteStatus} initStatus={props.initStatus} init={init}/>;\r\n\r\n        \r\n        })}   \r\n      \r\n       \r\n        </> ) \r\n\r\n  \r\n}\r\n \r\nconst myMapStateToProps =(state:any) =>{\r\n    return{\r\n  initStatus:state.statusPart.init1,\r\n  statusesList:state.statusPart.statuses\r\n}\r\n}\r\n\r\nexport default connect(myMapStateToProps,{deleteStatus,initStatus,addStatus})(StatusList); \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}